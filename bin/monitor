#!/bin/bash
# monitor output of a command, refresh every 2 seconds
# press 'R' key to manually refresh entire screen buffer

set -uo pipefail

# quietly exit from keyboard interrupts (CTRL+C)
# disables echo for interrupt signal and restores when script ends
stty -echoctl
trap "stty echoctl" EXIT
trap "exit" INT

stderr() {
  echo "$*" 1>&2
}

clear_screen() {
  # iterm2 specific wipe
  if [[ $TERM_PROGRAM == "iTerm.app" ]]; then
    printf '\033]1337;ClearScrollback\a\033[H\033[2J'
  else
    # xterm & friends
    printf '\033[3J\033[H\033[2J'
  fi
}

# preserve the original command and arguments exactly
COMMAND=( "$@" )
REFRESH_PERIOD_SECONDS=2

# basic usage guard
if [[ ${#COMMAND[@]} -eq 0 ]]; then
  stderr "usage: monitor <command> [args...]"
  exit 2
fi

while true; do
  # run the command, redirecting all output to stdout
  # in order to ensure we capture everything
  output=$(${COMMAND[@]} 2>&1)
  clear_screen
  stderr "$(date +"%Y-%m-%d %H:%M:%S")"
  stderr "$output"

  # reset key and wait REFRESH_PERIOD_SECONDS seconds for user to press a key
  # this is effectively our refresh interval for the output
  key=""
  read -rsn1 -t $REFRESH_PERIOD_SECONDS key

  # clear the screen if 'R' key is pressed
  if [ "$key" == "r" ] || [ "$key" == "R" ]; then
    clear_screen
  fi
done
