{
  "settingsSync.ignoredExtensions": ["platformio.platformio-ide"],

  // Configurable window title
  // https://code.visualstudio.com/updates/v1_10#_configurable-window-title
  "window.title": "[ ${rootName} ]  ${activeEditorMedium}  ${dirty}",
  "window.newWindowDimensions": "maximized",
  "window.zoomLevel": 2,
  "workbench.colorTheme": "Palenight Operator",
  "workbench.sideBar.location": "right",
  "workbench.tree.indent": 15,
  "workbench.tree.renderIndentGuides": "always",
  "workbench.colorCustomizations": {
    "tree.indentGuidesStroke": "#05ef3c"
  },

  "editor.accessibilitySupport": "off",
  "editor.fontFamily": "Ligconsolata-Regular, Menlo, Monaco, 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.inlineSuggest.enabled": true,
  "editor.renderWhitespace": "all",
  "editor.showUnused": true,
  // sticky headers for nested code blocks
  "editor.stickyScroll.enabled": true,
  // disable abc output in autocomplete
  "editor.suggest.showWords": false,
  "editor.tabSize": 2,
  "explorer.confirmDragAndDrop": false,
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,

  "[javascript][typescript][typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.fixAll": "never",
      "source.fixAll.eslint": "explicit"
    }
  },
  "importCost.timeout": 120000,
  "importCost.debug": true,
  "javascript.format.enable": false,
  "javascript.updateImportsOnFileMove.enabled": "prompt",
  "javascript.validate.enable": false,
  "typescript.enablePromptUseWorkspaceTsdk": true,
  "typescript.format.enable": false,
  "typescript.format.insertSpaceAfterCommaDelimiter": false,
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "typescript.tsdk": "./node_modules/typescript/lib",
  "typescript.preferGoToSourceDefinition": true,
  "typescript.tsserver.experimental.enableProjectDiagnostics": true,
  "tailwindCSS.experimental.classRegex": [
    "classnames\\(([^\\)]*)\\)", // classnames(...)
    "classNames\\(([^\\)]*)\\)" // classnames(...)
  ],

  "[json][jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },

  "[graphql][gql]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },

  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.inlineSuggest.enabled": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    }
  },
  "python.analysis.typeCheckingMode": "basic",
  "black-formatter.importStrategy": "fromEnvironment",
  "black-formatter.args": ["--line-length", "100", "--exclude", "\"\""],
  "isort.check": true,
  "isort.args": ["--line-length", "100", "--profile", "black"],
  "ruff.organizeImports": false,
  "flake8.args": [
    "--config",
    ".flake8",
    "--count",
    "--show-source",
    "--statistics"
  ],

  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "editor.formatOnSave": true
  },

  "[markdown]": {
    "editor.wordWrap": "off" // Default Settings JSON has this set to on, need to override
  },

  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "css.lint.unknownAtRules": "ignore",

  "shellcheck.executablePath": "/usr/local/bin/shellcheck",

  "git.autorefresh": false,
  "git.autoRepositoryDetection": false,
  "git.enableStatusBarSync": false,
  "gitlens.advanced.messages": {
    "suppressCommitHasNoPreviousCommitWarning": false,
    "suppressCommitNotFoundWarning": false,
    "suppressFileNotUnderSourceControlWarning": false,
    "suppressGitVersionWarning": false,
    "suppressLineUncommittedWarning": false,
    "suppressNoRepositoryWarning": false
  },

  "totalTypeScript.hideAllTips": false,
  "totalTypeScript.hideBasicTips": false,
  "totalTypeScript.hiddenTips": [
    "passing-generics-to-types",
    "typing-function-parameters",
    "basic-types",
    "as-assertion",
    "array-type",
    "as-const",
    "literal-type",
    "union-type",
    "ts-object-type",
    "type-alias-declaration",
    "optional-object-property",
    "null-keyword",
    "partial-utility-type",
    "generic-slots-in-functions",
    "interface-declaration",
    "returntype-utility-type",
    "typeof",
    "any-type",
    "in-operator-narrowing",
    "variable-type-annotation",
    "record-utility-type",
    "tuple-type",
    "function-return-type",
    "keyof",
    "as-const-on-object",
    "type-alias-with-generics",
    "parameters-utility-type",
    "undefined-keyword",
    "non-null-expression",
    "type-predicate",
    "interface-with-generics",
    "interface-with-multiple-generics",
    "readonly-utility-type",
    "type-alias-with-multiple-generics",
    "mapped-type",
    "conditional-type",
    "never-keyword",
    "nested-conditional-type",
    "infer",
    "omit-utility-type",
    "nonnullable-utility-type",
    "readonly-object-property",
    "pick-utility-type",
    "exclude-utility-type",
    "required-utility-type",
    "awaited-utility-type",
    "bigint",
    "extract-utility-type"
  ]
}
